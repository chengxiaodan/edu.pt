/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _show_menu = __webpack_require__(3);

	var _show_menu2 = _interopRequireDefault(_show_menu);

	var _zqEs = __webpack_require__(4);

	var _zqEs2 = _interopRequireDefault(_zqEs);

	var _footerEs = __webpack_require__(2);

	var _footerEs2 = _interopRequireDefault(_footerEs);

	var _caseEs = __webpack_require__(1);

	var _caseEs2 = _interopRequireDefault(_caseEs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var $zqmenu = $('#zqmenu');
	$(document).ready(function () {
		_caseEs2.default.init();
		$('#pagepiling').pagepiling({
			onLeave: function onLeave(index, nextIndex) {
				new WOW().init();
				if (index !== nextIndex) {
					_caseEs2.default.lisScreen();
				}
			},
			afterLoad: function afterLoad(anchorLink, index) {
				if (index == 3) {
					// 智趣
					_zqEs2.default.init();
				} else if (index > 3 && index < 9) {
					$zqmenu.show();
					if (index > 5) {
						$zqmenu.find('a').eq(0).removeClass('on');
						$zqmenu.find('a').eq(1).addClass('on');
					} else {
						$zqmenu.find('a').eq(1).removeClass('on');
						$zqmenu.find('a').eq(0).addClass('on');
					}
				} else {
					$zqmenu.hide();
				}
			}
		});
		new WOW().init();
		(0, _show_menu2.default)();
		_zqEs2.default.zq();
		(0, _footerEs2.default)();
		$zqmenu.on('click', 'a', function () {
			$(this).addClass('on');
			$(this).siblings().removeClass('on');
			$.fn.pagepiling.moveTo($(this).data('page'));
		});
	});

/***/ }),
/* 1 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var list = $('#cxd-bg-6 .btn a');
	exports.default = {
		lisScreen: function lisScreen() {
			$('.bg-mask').hide();
		},
		init: function init() {
			$('.close-box').click(function () {
				$('.bg-mask').hide();
				$.fn.pagepiling.setAllowScrolling(true);
			});
			for (var i = 0; i < list.length; i++) {
				(function (Index) {
					list[Index].addEventListener('click', function (e) {
						$('#anli-box-' + (Index + 1)).show();
						$(".cxd-context").scrollTop(4);
						$.fn.pagepiling.setAllowScrolling(false);
					}, false);
				})(i);
			};
			var li = $('#cxd-bg-6 li');
			for (var j = 0; j < li.length; j++) {
				(function (Index) {
					if ($(window).width() <= 1024) {
						$(li[Index]).click(function (event) {
							//取消事件冒泡  
							event.stopPropagation();
							//按钮的toggle,如果div是可见的,点击按钮切换为隐藏的;如果是隐藏的,切换为可见的。
							li.find('.item_hover').hide();
							$(this).find('.item_hover').show();
							return false;
						});
						//点击空白处隐藏弹出层，下面为滑动消失效果和淡出消失效果。
						$(document).click(function (event) {
							var _con = $(li[Index]).find('.item_hover'); // 设置目标区域
							if (!_con.is(event.target) && _con.has(event.target).length === 0) {
								// Mark 1
								_con.hide(); //淡出消失
							}
						});
					} else {
						$(li[Index]).hover(function () {
							$(this).find('.item_hover').show();
						}, function () {
							$(this).find('.item_hover').hide();
						});
					}
				})(j);
			};
			//		$(".cxd-context").scroll(function(){
			//			const scrollTop = $(this).scrollTop();
			//			const scrollHeight = $(this).children('div').eq(0).height();
			//			const scrollHeight1 = $(this).height();
			//			if(scrollTop + scrollHeight1 >= scrollHeight){
			//		　　　　$.fn.pagepiling.setAllowScrolling(true);
			//		　　}else if(scrollTop <=0){
			//				$.fn.pagepiling.setAllowScrolling(true);
			//			}
			//	     });
		}
	};

/***/ }),
/* 2 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports.default = function () {
		var $footer_mask = $('#footer_mask'),
		    $footer_list = $('#footer_list');
		$footer_list.children('li').hover(function () {
			var type = $(this).data('type');
			if (type == 3) {
				$footer_mask.animate({ opacity: 0 });
			} else if (type == 1) {
				$(this).children('div').show();
			}
		}, function () {
			var type = $(this).data('type');
			if (type == 3) {
				$footer_mask.animate({ opacity: 0.4 });
			} else if (type == 1) {
				$(this).children('div').hide();
			}
		});
	};

/***/ }),
/* 3 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports.default = function () {
		var $open = $('#openMenu'),
		    $menu = $('#menu');
		$open.on('click', function () {
			$menu.show(100);
		});
		$menu.find('.close').on('click', function () {
			$menu.hide(100);
		});
	};

/***/ }),
/* 4 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var $zq = $('#zq'),
	    $title = $zq.find('.title'),
	    body_w = $('body').width(),
	    $zq_div = $zq.find('.j-hover');
	exports.default = {
		zq: function zq() {
			$zq_div.hover(function () {
				$(this).find('.mask').show();
			}, function () {
				$(this).find('.mask').hide();
			}).on('click', function () {
				if (body_w <= 768) {
					// 手机
					$zq_div.eq(0).animate({ top: '-50%' });
					$zq_div.eq(1).animate({ top: '100%' }, function () {
						setTimeout(function () {
							$zq_div.eq(0).css({ top: 0 });
							$zq_div.eq(1).css({ top: '50%' });
							$title.hide();
						}, 500);
					});
				} else {
					// pc
					$zq_div.eq(0).animate({ left: '-50%' });
					$zq_div.eq(1).animate({ right: '-50%' }, function () {
						$zq_div.eq(0).animate({ left: 0 });
						$zq_div.eq(1).animate({ right: 0 });
						$title.hide();
					});
				}
				$title.hide();
				$.fn.pagepiling.moveTo($(this).data('page'));
			});
		},
		init: function init() {
			$zq_div.eq(1).find('.mask').show();
		}
	};

/***/ })
/******/ ]);